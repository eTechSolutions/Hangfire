@* Generator: Template TypeVisibility: Internal GeneratePrettyNames: True *@
@using System.Collections
@using System.Collections.Generic
@using Hangfire.Dashboard
@using Hangfire.Dashboard.Pages
@inherits RazorPage
@{
    Layout = new LayoutPage(Queue.ToUpperInvariant());

    int from, perPage;

    int.TryParse(Query("from"), out from);
    int.TryParse(Query("count"), out perPage);
    string filterString = Query("filterString");
    string filterMethodString = Query("filterMethodString");
    string startDate = Query("startDate");
    string endDate = Query("endDate");
    string startTime = Query("startTime");
    string endTime = Query("endTime");

    var monitor = Storage.GetMonitoringApi();
    var countParameters = new Dictionary<string, string>()
    {
        { "filterString", filterString },
        { "filterMethodString", filterMethodString },
        { "startDate", startDate },
        { "endDate", endDate },
        { "startTime", startTime },
        { "endTime", endTime }
    };

    var jobCount = monitor.EnqueuedCount(Queue, countParameters);
    var pager = new Pager(from, perPage, jobCount)
    {
        JobsFilterText = filterString,
        JobsFilterMethodText = filterMethodString,
        JobsFilterStartDate = startDate,
        JobsFilterEndDate = endDate,
        JobsFilterStartTime = startTime,
        JobsFilterEndTime = endTime
    };
    var enqueuedJobs = monitor.EnqueuedJobs(Queue, pager);
}

<div class="row">
    <div class="col-md-3">
        @Html.JobsSidebar()
    </div>
    <div class="col-md-9">
        @Html.Breadcrumbs(Queue.ToUpperInvariant(), new Dictionary<string, string>
        {
            { "Queues", Url.LinkToQueues() }
        })

        <h1 class="page-header">@Queue.ToUpperInvariant() <small>Enqueued jobs</small></h1>

        @if (pager.TotalPageCount == 0)
        {
            <div class="alert alert-info">
                The queue is empty.
            </div>
        }
        else
        {
            <div class="js-jobs-list">
                <div class="btn-toolbar btn-toolbar-top">
                    <button class="js-jobs-list-command btn btn-sm btn-default"
                            data-url="@Url.To("/jobs/enqueued/delete")"
                            data-loading-text="Deleting..."
                            data-confirm="Do you really want to DELETE ALL selected jobs?"
                            disabled="disabled">
                        <span class="glyphicon glyphicon-remove"></span>
                        Delete selected
                    </button>
                    @if (EnableSearch == true)
                    { <button data-toggle="collapse" data-target="#advanced-search-bar" class="btn btn-sm btn-success">Advanced Search</button> }
                </div>
                @if (EnableSearch == true)
                {
                    <div id="advanced-search-bar" class="collapse well">
                        <h4 class="advanced-search-header">
                            Advanced Search
                        </h4>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    <input type="text" value="" id="filterValueString" class="form-control" placeholder="Search..." />
                                </div>
                                <div class="form-group">
                                    @{
                                        var currentDateTime = DateTime.Now.ToString("dd/MM/yyyy HH:mm");
                                    }
                                    <input id="filterOnDateTime" name="filterOnDateTime" type="checkbox" class="js-jobs-filterOnDateTime-checked" />
                                    <label for="filterOnDateTime">Filter on date time</label>
                                    <div id="datetime-filters" class="row">
                                        <div class="col-xs-6">
                                            <input type="text" value="@currentDateTime" class="datetimeselector-start form-control" id="startDateTime" />
                                        </div>
                                        <div class="col-xs-6">
                                            <input type="text" value="@currentDateTime" class="datetimeselector-end form-control" id="endDateTime" />
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <input id="filterOnMethodName" name="filterOnMethodName" type="checkbox" class="js-jobs-filterOnMethodName-checked" />
                                    <label for="filterOnMethodName">Filter on method name</label>
                                    <input type="text" value="" id="filterMethodString" class="form-control" placeholder="Method name..." />
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <button class="js-jobs-filter-command btn btn-sm btn-success" data-url="@Url.To("/jobs/enqueued")" >
                                <span class="glyphicon glyphicon-repeat"></span>
                                    Filter jobs
                                </button>
                            </div>
                        </div>
                    </div>
                }
                @Html.PerPageSelector(pager)
                <table class="table">
                    <thead>
                    <tr>
                        <th class="min-width">
                            <input type="checkbox" class="js-jobs-list-select-all"/>
                        </th>
                        <th class="min-width">Id</th>
                        <th class="min-width">State</th>
                        <th>Job</th>
                        <th class="align-right">Enqueued</th>
                    </tr>
                    </thead>
                    <tbody>
                    @foreach (var job in enqueuedJobs)
                    {
                        <tr class="js-jobs-list-row hover @(!job.Value.InEnqueuedState ? "obsolete-data" : null)">
                            <td>
                                <input type="checkbox" class="js-jobs-list-checkbox" name="jobs[]" value="@job.Key"/>
                            </td>
                            <td class="min-width">
                                @Html.JobIdLink(job.Key)
                                @if (!job.Value.InEnqueuedState)
                                {
                                    <span title="Job's state has been changed while fetching data." class="glyphicon glyphicon-question-sign"></span>
                                }
                            </td>
                            <td class="min-width">
                                @Html.StateLabel(job.Value.State)
                            </td>
                            <td>
                                @Html.JobNameLink(job.Key, job.Value.Job)
                            </td>
                            <td class="align-right">
                                @if (job.Value.EnqueuedAt.HasValue)
                                {
                                    @if (RelativeTime == true)
                                    {
                                        @Html.RelativeTime(job.Value.EnqueuedAt.Value);
                                    }
                                    else
                                    {
                                        @Html.Raw(job.Value.EnqueuedAt.Value.ToString("dd/MM/yyyy HH:mm"));
                                    }
                                }
                                else
                                {
                                    <em>n/a</em>
                                }
                            </td>
                        </tr>
                    }
                    </tbody>
                </table>

                @Html.Paginator(pager)
            </div>
        }
    </div>
</div>