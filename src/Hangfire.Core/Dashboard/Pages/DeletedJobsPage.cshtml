@* Generator: Template TypeVisibility: Internal GeneratePrettyNames: True *@
@using Hangfire.Dashboard
@using Hangfire.Dashboard.Pages
@using Hangfire.States;
@inherits RazorPage
@{
    Layout = new LayoutPage("Deleted Jobs");

    int from, perPage;

    int.TryParse(Query("from"), out from);
    int.TryParse(Query("count"), out perPage);
    string filterString = Query("filterString");
    string filterMethodString = Query("filterMethodString");
    string startDate = Query("startDate");
    string endDate = Query("endDate");
    string startTime = Query("startTime");
    string endTime = Query("endTime");

    var monitor = Storage.GetMonitoringApi();
    var countParameters = new Dictionary<string, string>()
    {
        { "stateName", DeletedState.StateName },
        { "filterString", filterString },
        { "filterMethodString", filterMethodString },
        { "startDate", startDate },
        { "endDate", endDate },
        { "startTime", startTime },
        { "endTime", endTime }
    };

    var jobCount = monitor.JobCountByStateName(countParameters);
    var pager = new Pager(from, perPage, jobCount)
    {
        JobsFilterText = filterString,
        JobsFilterMethodText = filterMethodString,
        JobsFilterStartDate = startDate,
        JobsFilterEndDate = endDate,
        JobsFilterStartTime = startTime,
        JobsFilterEndTime = endTime
    };

    var jobs = monitor.DeletedJobs(pager);
}

<div class="row">
    <div class="col-md-3">
        @Html.JobsSidebar()
    </div>
    <div class="col-md-9">
        <h1 class="page-header">Deleted Jobs</h1>

        @if (pager.TotalPageCount == 0)
        {
            <div class="alert alert-info">
                No deleted jobs found.
            </div>
        }
        else
        {
            <div class="js-jobs-list">
                <div class="btn-toolbar btn-toolbar-top">
                    <button class="js-jobs-list-command btn btn-sm btn-primary"
                            data-url="@Url.To("/jobs/deleted/requeue")"
                            data-loading-text="Enqueueing..."
                            disabled="disabled">
                        <span class="glyphicon glyphicon-repeat"></span>
                        Requeue jobs
                    </button>
                    <br>
                    <br>
                    <button class="js-jobs-filter-command btn btn-sm btn-default"
                            data-url="@Url.To("/jobs/deleted")">
                        <span class="glyphicon glyphicon-repeat"></span>
                        Filter jobs
                    </button>
                    <input type="text" value="" id="filterValueString" class="fltr-txtbx btn-sm" />
                    <div style="width:200px;margin-right:10px;">
                        <input id="filterOnDateTime" type="checkbox" class="js-jobs-filterOnDateTime-checked">@Html.Raw("Filter on date and time")</input>
                        <br />
                        <input id="filterOnMethodName" type="checkbox" class="js-jobs-filterOnMethodName-checked">@Html.Raw("Filter on method name")</input>
                    </div>
                    @{
                        var currentDateTime = DateTime.Now.ToString("dd/MM/yyyy HH:mm");
                    }
                    <br />
                    <br />
                    <label id="methodValueLabel" hidden="hidden">Method name</label>
                    <input type="text" value="" id="filterMethodString" class="fltr-txtbx btn-sm" style="padding-bottom:inherit" hidden="hidden" />
                    <br />
                    <input type="text" value="@currentDateTime" style="width: 130px; margin:0px 0px 0px 80px;" class="datetimeselector-start" id="startDateTime" hidden="hidden" />
                    <input type="text" value="@currentDateTime" style="width: 130px;" class="datetimeselector-end" id="endDateTime" hidden="hidden" />
                    @Html.PerPageSelector(pager)
                </div>
                <table class="table">
                    <thead>
                    <tr>
                        <th class="min-width">
                            <input type="checkbox" class="js-jobs-list-select-all"/>
                        </th>
                        <th class="min-width">Id</th>
                        <th>Job</th>
                        <th class="align-right">Deleted</th>
                    </tr>
                    </thead>
                    <tbody>
                    @foreach (var job in jobs)
                    {
                        <tr class="js-jobs-list-row @(job.Value != null && !job.Value.InDeletedState ? "obsolete-data" : null) @(job.Value != null && job.Value.InDeletedState && job.Value != null ? "hover" : null)">
                            <td>
                                @if (job.Value != null && job.Value.InDeletedState)
                                {
                                    <input type="checkbox" class="js-jobs-list-checkbox" name="jobs[]" value="@job.Key"/>
                                }
                            </td>
                            <td class="min-width">
                                @Html.JobIdLink(job.Key)
                                @if (job.Value != null && !job.Value.InDeletedState)
                                {
                                    <span title="Job's state has been changed while fetching data." class="glyphicon glyphicon-question-sign"></span>
                                }
                            </td>

                            @if (job.Value == null)
                            {
                                <td colspan="2"><em>Job has expired.</em></td>
                            }
                            else
                            {
                                <td>
                                    @Html.JobNameLink(job.Key, job.Value.Job)
                                </td>
                                <td class="align-right">
                                    @if (job.Value.DeletedAt.HasValue)
                                    {
                                        @Html.Raw(job.Value.DeletedAt.Value.ToString("dd/MM/yyyy HH:mm"));
                                    }
                                </td>
                            }
                        </tr>
                    }
                    </tbody>
                </table>

                @Html.Paginator(pager)
            </div>
        }
    </div>
</div>

